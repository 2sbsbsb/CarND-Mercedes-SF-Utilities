
#ifndef FUSION_KF_H_
#define FUSION_KF_H_

#include "measurement_package.h"
#include <vector>
#include <string>
#include <fstream>
#include "ukf.h"

class FusionEKF {
public:
	FusionEKF();
	virtual ~FusionEKF();
	void ProcessMeasurement(const MeasurementPackage &measurement_pack);
	UnscentedKalmanFilter ukf_;
	MatrixXd CalculateJacobian(const VectorXd &x_state);


private:
	bool is_initialized_;

	long previous_timestamp_;

	MatrixXd R_laser_;
	MatrixXd R_radar_;
	MatrixXd H_laser_;
	MatrixXd Hj_;

	//set the process noise params
	float noise_acc_per_sec;
	float noise_yaw_acc_per_sec;

	//ukf params
	float n_aug;
	float kappa;

	std::vector<float> w;
};

#endif /* FUSION_KF_H_ */
